1. introduction
 - overview of the work:
  * protocol itself
  * server software
  * client software
 - thesis not only implements a protocol, but
   tries to cover protocol creation step-by-step
   and lists important considerations

2. rationale/motivation
 - what are we trying to accomplish?
 - overview of existing protocols
 - problematic issues that are solved here

3. design goals
 - low latency, low protocol overhead (think GPRS)
 - security
 - random access (can be used as filesystem)
 - ...?

4. usage patterns
 - detailed list of use cases with actions that the client
   needs to perform

5. specific considerations
	a. binary vs text
	b. encryption scheme (TLS ?)
	c. mode of operation (multiple actions on one TCP link and the like)
	d. instruction set, extensibility
	e. path specs - encodings, separators
	f. other platform-specific considerations (..?)
	g. protocol semantics for non-supported actions (caching of directory listings etc)
	...?

6. protocol description
 - in RFC format?

7. server implementation
 - .....

8. client implementation
 - .....
 - mDNS discovery on different platforms
